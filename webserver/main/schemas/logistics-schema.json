{
  "openapi": "3.0.0",
  "info": {
    "title": "ONDC Protocol API for logistics",
    "description": "ONDC Protocol Core API specification. This is an adaptation of Beckn Core version 0.9.3",
    "version": "1.0.19"
  },
  "security": [
    {
      "SubscriberAuth": [ ]
    },
    {
      "GatewaySubscriberAuth": [ ]
    },
    {
      "GatewaySubscriberAuthNew": [ ]
    }
  ],
  "externalDocs": {
    "description": "Contract between logistics buyer and seller apps",
    "url": "https://docs.google.com/document/d/1LiKGK3AKwzx5GWAc5g942QKB-TzDn0gGMsvXNJgIrmk/edit"
  },
  "paths": {
    "/search": {
      "post": {
        "tags": [
          "ONDC Seller App",
          "ONDC Gateway"
        ],
        "description": "Search for services by intent",
        "requestBody": {
          "description": "Buyer searches for products and services",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "context": {
                    "$ref": "#/components/schemas/Context"
                  },
                  "message": {
                    "type": "object",
                    "properties": {
                      "intent": {
                        "$ref": "#/components/schemas/Intent"
                      }
                    }
                  }
                },
                "required": [
                  "context",
                  "message"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of message received",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "ack": {
                          "$ref": "#/components/schemas/Ack"
                        }
                      },
                      "required": [
                        "ack"
                      ]
                    },
                    "error": {
                      "$ref": "#/components/schemas/Error"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/select": {
      "post": {
        "tags": [
          "ONDC Seller App"
        ],
        "description": "Select items from the catalog and build your order",
        "requestBody": {
          "description": "Buyer selects one or more catalog items",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "context": {
                    "$ref": "#/components/schemas/Context"
                  },
                  "message": {
                    "type": "object",
                    "properties": {
                      "order": {
                        "$ref": "#/components/schemas/Order"
                      }
                    },
                    "required": [
                      "order"
                    ]
                  }
                },
                "required": [
                  "context",
                  "message"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of message received",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "ack": {
                          "$ref": "#/components/schemas/Ack"
                        }
                      },
                      "required": [
                        "ack"
                      ]
                    },
                    "error": {
                      "$ref": "#/components/schemas/Error"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/init": {
      "post": {
        "tags": [
          "ONDC Seller App"
        ],
        "description": "Initialize an order by providing billing and/or shipping details",
        "requestBody": {
          "description": "Buyer initializes order checkout",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "context": {
                    "$ref": "#/components/schemas/Context"
                  },
                  "message": {
                    "type": "object",
                    "properties": {
                      "order": {
                        "$ref": "#/components/schemas/Order"
                      }
                    },
                    "required": [
                      "order"
                    ]
                  }
                },
                "required": [
                  "context",
                  "message"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of message received",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "ack": {
                          "$ref": "#/components/schemas/Ack"
                        }
                      },
                      "required": [
                        "ack"
                      ]
                    },
                    "error": {
                      "$ref": "#/components/schemas/Error"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/confirm": {
      "post": {
        "tags": [
          "ONDC Seller App"
        ],
        "description": "Initialize an order by providing billing and/or shipping details",
        "requestBody": {
          "description": "Buyer confirms an order",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "context": {
                    "$ref": "#/components/schemas/Context"
                  },
                  "message": {
                    "type": "object",
                    "properties": {
                      "order": {
                        "$ref": "#/components/schemas/Order"
                      }
                    },
                    "required": [
                      "order"
                    ]
                  }
                },
                "required": [
                  "context",
                  "message"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of message received",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "ack": {
                          "$ref": "#/components/schemas/Ack"
                        }
                      },
                      "required": [
                        "ack"
                      ]
                    },
                    "error": {
                      "$ref": "#/components/schemas/Error"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/status": {
      "post": {
        "tags": [
          "ONDC Seller App"
        ],
        "description": "Fetch the latest order object",
        "requestBody": {
          "description": "Buyer checks for status of order",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "context": {
                    "$ref": "#/components/schemas/Context"
                  },
                  "message": {
                    "type": "object",
                    "properties": {
                      "order_id": {
                        "$ref": "#/components/schemas/Order/properties/id"
                      }
                    },
                    "required": [
                      "order_id"
                    ]
                  }
                },
                "required": [
                  "context",
                  "message"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of message received",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "ack": {
                          "$ref": "#/components/schemas/Ack"
                        }
                      },
                      "required": [
                        "ack"
                      ]
                    },
                    "error": {
                      "$ref": "#/components/schemas/Error"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/track": {
      "post": {
        "tags": [
          "ONDC Seller App"
        ],
        "description": "Track an active order",
        "requestBody": {
          "description": "Buyer tracks fulfillment of an order",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "context": {
                    "$ref": "#/components/schemas/Context"
                  },
                  "message": {
                    "type": "object",
                    "properties": {
                      "order_id": {
                        "$ref": "#/components/schemas/Order/properties/id"
                      },
                      "callback_url": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "required": [
                      "order_id"
                    ]
                  }
                },
                "required": [
                  "context",
                  "message"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of message received",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "ack": {
                          "$ref": "#/components/schemas/Ack"
                        }
                      },
                      "required": [
                        "ack"
                      ]
                    },
                    "error": {
                      "$ref": "#/components/schemas/Error"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/cancel": {
      "post": {
        "tags": [
          "ONDC Seller App"
        ],
        "description": "Cancel an order",
        "requestBody": {
          "description": "Buyer cancels an order",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "context": {
                    "$ref": "#/components/schemas/Context"
                  },
                  "message": {
                    "type": "object",
                    "properties": {
                      "order_id": {
                        "$ref": "#/components/schemas/Order/properties/id"
                      },
                      "cancellation_reason_id": {
                        "$ref": "#/components/schemas/Option/properties/id"
                      },
                      "descriptor": {
                        "$ref": "#/components/schemas/Descriptor"
                      }
                    },
                    "required": [
                      "order_id"
                    ]
                  }
                },
                "required": [
                  "context",
                  "message"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of message received",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "ack": {
                          "$ref": "#/components/schemas/Ack"
                        }
                      },
                      "required": [
                        "ack"
                      ]
                    },
                    "error": {
                      "$ref": "#/components/schemas/Error"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/update": {
      "post": {
        "tags": [
          "ONDC Seller App"
        ],
        "description": "Update an order",
        "requestBody": {
          "description": "Buyer updates an order",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "context": {
                    "$ref": "#/components/schemas/Context"
                  },
                  "message": {
                    "type": "object",
                    "properties": {
                      "update_target": {
                        "description": "Comma separated values of order objects being updated. For example: ```\"update_target\":\"item,billing,fulfillment\"```",
                        "type": "string"
                      },
                      "order": {
                        "$ref": "#/components/schemas/Order"
                      }
                    },
                    "required": [
                      "update_target",
                      "order"
                    ]
                  }
                },
                "required": [
                  "context",
                  "message"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of message received",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "ack": {
                          "$ref": "#/components/schemas/Ack"
                        }
                      },
                      "required": [
                        "ack"
                      ]
                    },
                    "error": {
                      "$ref": "#/components/schemas/Error"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/rating": {
      "post": {
        "tags": [
          "ONDC Seller App"
        ],
        "description": "Provide feedback on a service",
        "requestBody": {
          "description": "Buyer rates for one or more rating categories",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "context": {
                    "$ref": "#/components/schemas/Context"
                  },
                  "message": {
                    "$ref": "#/components/schemas/Rating"
                  }
                },
                "required": [
                  "context",
                  "message"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of message received",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "ack": {
                          "$ref": "#/components/schemas/Ack"
                        }
                      },
                      "required": [
                        "ack"
                      ]
                    },
                    "error": {
                      "$ref": "#/components/schemas/Error"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/support": {
      "post": {
        "tags": [
          "ONDC Seller App"
        ],
        "description": "Contact support",
        "requestBody": {
          "description": "Buyer searches for Support Contact details",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "context": {
                    "$ref": "#/components/schemas/Context"
                  },
                  "message": {
                    "type": "object",
                    "properties": {
                      "ref_id": {
                        "type": "string",
                        "description": "ID of the element for which support is needed"
                      }
                    }
                  }
                },
                "required": [
                  "context",
                  "message"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of message received",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "ack": {
                          "$ref": "#/components/schemas/Ack"
                        }
                      },
                      "required": [
                        "ack"
                      ]
                    },
                    "error": {
                      "$ref": "#/components/schemas/Error"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/issue": {
      "post": {
        "tags": [
          "Complaint lifecycle management"
        ],
        "description": "###  Operation Description \n * Create an issue for the following entities  of intrest, for which an issue is faced by the buyer: \n    +  order\n    +  item\n    +  transaction \n    +  fulfillment or\n    +  payment \n * The issue can be created/raised by any of \n    + the Issueca#/components/schemas/IssueCateogory' himself related to any of he entity mentioned  Or\n    + By any of the Issueca#/components/schemas/IssueCateogory'-app,seller-app, transaction-counter party, or logistics providers NPs to help resolve any issue rasied by the buyer.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "context": {
                    "$ref": "#/components/schemas/Context"
                  },
                  "message": {
                    "type": "object",
                    "properties": {
                      "issue": {
                        "$ref": "#/components/schemas/Issue"
                      }
                    }
                  }
                },
                "required": [
                  "context",
                  "message"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of message received",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "ack": {
                          "$ref": "#/components/schemas/Ack"
                        }
                      },
                      "required": [
                        "ack"
                      ]
                    },
                    "error": {
                      "$ref": "#/components/schemas/Error"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/issue_status": {
      "post": {
        "tags": [
          "Complaint status checks"
        ],
        "description": "Fetch the status of a complaint",
        "requestBody": {
          "description": "Any of the network participants or the buyer or seller or lsp checks for status of order",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "context": {
                    "$ref": "#/components/schemas/Context"
                  },
                  "message": {
                    "type": "object",
                    "properties": {
                      "issue_id": {
                        "description": "Network issue identifier is a unique number assigned to a complaint by the interfacing application",
                        "type": "string"
                      }
                    },
                    "required": [
                      "issue_id"
                    ]
                  }
                },
                "required": [
                  "context",
                  "message"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of message received",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "ack": {
                          "$ref": "#/components/schemas/Ack"
                        }
                      },
                      "required": [
                        "ack"
                      ]
                    },
                    "error": {
                      "$ref": "#/components/schemas/Error"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/on_search": {
      "post": {
        "tags": [
          "ONDC Buyer App",
          "ONDC Gateway"
        ],
        "description": "Send catalog",
        "requestBody": {
          "description": "Sellers provide their catalog in response to buyer search",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "context": {
                    "$ref": "#/components/schemas/Context"
                  },
                  "message": {
                    "type": "object",
                    "properties": {
                      "catalog": {
                        "$ref": "#/components/schemas/Catalog"
                      }
                    },
                    "required": [
                      "catalog"
                    ]
                  },
                  "error": {
                    "$ref": "#/components/schemas/Error"
                  }
                },
                "required": [
                  "context"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of message received",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "ack": {
                          "$ref": "#/components/schemas/Ack"
                        }
                      },
                      "required": [
                        "ack"
                      ]
                    },
                    "error": {
                      "$ref": "#/components/schemas/Error"
                    }
                  },
                  "required": [
                    "context"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/on_select": {
      "post": {
        "tags": [
          "ONDC Buyer App"
        ],
        "description": "Send draft order object with quoted price for selected items",
        "requestBody": {
          "description": "Seller provides quote for selected items",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "context": {
                    "$ref": "#/components/schemas/Context"
                  },
                  "message": {
                    "type": "object",
                    "properties": {
                      "order": {
                        "type": "object",
                        "properties": {
                          "provider": {
                            "$ref": "#/components/schemas/Provider"
                          },
                          "provider_location": {
                            "$ref": "#/components/schemas/Location"
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "allOf": [
                                {
                                  "$ref": "#/components/schemas/Item"
                                },
                                {
                                  "properties": {
                                    "quantity": {
                                      "$ref": "#/components/schemas/ItemQuantity"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "add_ons": {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/AddOn"
                            }
                          },
                          "offers": {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/Offer"
                            }
                          },
                          "quote": {
                            "$ref": "#/components/schemas/Quotation"
                          }
                        }
                      }
                    },
                    "required": [
                      "order"
                    ]
                  },
                  "error": {
                    "$ref": "#/components/schemas/Error"
                  }
                },
                "required": [
                  "context"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of message received",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "ack": {
                          "$ref": "#/components/schemas/Ack"
                        }
                      },
                      "required": [
                        "ack"
                      ]
                    },
                    "error": {
                      "$ref": "#/components/schemas/Error"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/on_init": {
      "post": {
        "tags": [
          "ONDC Buyer App"
        ],
        "description": "Send order object with payment details updated",
        "requestBody": {
          "description": "Seller provides terms and conditions for an order",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "context": {
                    "$ref": "#/components/schemas/Context"
                  },
                  "message": {
                    "type": "object",
                    "properties": {
                      "order": {
                        "type": "object",
                        "properties": {
                          "provider": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/Provider/properties/id"
                              }
                            }
                          },
                          "provider_location": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/Location/properties/id"
                              }
                            }
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/Item/properties/id"
                                },
                                "quantity": {
                                  "$ref": "#/components/schemas/ItemQuantity/properties/selected"
                                }
                              }
                            }
                          },
                          "add_ons": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/AddOn/properties/id"
                                }
                              }
                            }
                          },
                          "offers": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "$ref": "#/components/schemas/Offer/properties/id"
                                }
                              }
                            }
                          },
                          "billing": {
                            "$ref": "#/components/schemas/Billing"
                          },
                          "fulfillment": {
                            "$ref": "#/components/schemas/Fulfillment"
                          },
                          "quote": {
                            "$ref": "#/components/schemas/Quotation"
                          },
                          "payment": {
                            "$ref": "#/components/schemas/Payment"
                          }
                        }
                      }
                    },
                    "required": [
                      "order"
                    ]
                  },
                  "error": {
                    "$ref": "#/components/schemas/Error"
                  }
                },
                "required": [
                  "context"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of message received",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "ack": {
                          "$ref": "#/components/schemas/Ack"
                        }
                      },
                      "required": [
                        "ack"
                      ]
                    },
                    "error": {
                      "$ref": "#/components/schemas/Error"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/on_confirm": {
      "post": {
        "tags": [
          "ONDC Buyer App"
        ],
        "description": "Send active order object",
        "requestBody": {
          "description": "Seller confirms order",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "context": {
                    "$ref": "#/components/schemas/Context"
                  },
                  "message": {
                    "type": "object",
                    "properties": {
                      "order": {
                        "$ref": "#/components/schemas/Order"
                      }
                    },
                    "required": [
                      "order"
                    ]
                  },
                  "error": {
                    "$ref": "#/components/schemas/Error"
                  }
                },
                "required": [
                  "context"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of message received",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "ack": {
                          "$ref": "#/components/schemas/Ack"
                        }
                      },
                      "required": [
                        "ack"
                      ]
                    },
                    "error": {
                      "$ref": "#/components/schemas/Error"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/on_track": {
      "post": {
        "tags": [
          "ONDC Buyer App"
        ],
        "description": "Send tracking details of an active order",
        "requestBody": {
          "description": "Seller provides tracking details for an order",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "context": {
                    "$ref": "#/components/schemas/Context"
                  },
                  "message": {
                    "type": "object",
                    "properties": {
                      "tracking": {
                        "$ref": "#/components/schemas/Tracking"
                      }
                    },
                    "required": [
                      "tracking"
                    ]
                  },
                  "error": {
                    "$ref": "#/components/schemas/Error"
                  }
                },
                "required": [
                  "context"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of message received",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "ack": {
                          "$ref": "#/components/schemas/Ack"
                        }
                      },
                      "required": [
                        "ack"
                      ]
                    },
                    "error": {
                      "$ref": "#/components/schemas/Error"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/on_cancel": {
      "post": {
        "tags": [
          "ONDC Buyer App"
        ],
        "description": "Send cancellation request_id with reasons list in case of cancellation request. Else send cancelled order object",
        "requestBody": {
          "description": "Seller provides response to cancellation request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "context": {
                    "$ref": "#/components/schemas/Context"
                  },
                  "message": {
                    "type": "object",
                    "properties": {
                      "order": {
                        "$ref": "#/components/schemas/Order"
                      }
                    },
                    "required": [
                      "order"
                    ]
                  },
                  "error": {
                    "$ref": "#/components/schemas/Error"
                  }
                },
                "required": [
                  "context"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of message received",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "ack": {
                          "$ref": "#/components/schemas/Ack"
                        }
                      },
                      "required": [
                        "ack"
                      ]
                    },
                    "error": {
                      "$ref": "#/components/schemas/Error"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/on_update": {
      "post": {
        "tags": [
          "ONDC Buyer App"
        ],
        "description": "Returns updated service with updated runtime object",
        "requestBody": {
          "description": "Seller provides response to order update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "context": {
                    "$ref": "#/components/schemas/Context"
                  },
                  "message": {
                    "type": "object",
                    "properties": {
                      "order": {
                        "$ref": "#/components/schemas/Order"
                      }
                    },
                    "required": [
                      "order"
                    ]
                  },
                  "error": {
                    "$ref": "#/components/schemas/Error"
                  }
                },
                "required": [
                  "context"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of message received",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "ack": {
                          "$ref": "#/components/schemas/Ack"
                        }
                      },
                      "required": [
                        "ack"
                      ]
                    },
                    "error": {
                      "$ref": "#/components/schemas/Error"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/on_status": {
      "post": {
        "tags": [
          "ONDC Buyer App"
        ],
        "description": "Fetch the status of a Service",
        "requestBody": {
          "description": "Seller provides status information for order",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "context": {
                    "$ref": "#/components/schemas/Context"
                  },
                  "message": {
                    "type": "object",
                    "properties": {
                      "order": {
                        "$ref": "#/components/schemas/Order"
                      }
                    },
                    "required": [
                      "order"
                    ]
                  },
                  "error": {
                    "$ref": "#/components/schemas/Error"
                  }
                },
                "required": [
                  "context"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of message received",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "ack": {
                          "$ref": "#/components/schemas/Ack"
                        }
                      },
                      "required": [
                        "ack"
                      ]
                    },
                    "error": {
                      "$ref": "#/components/schemas/Error"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/on_rating": {
      "post": {
        "tags": [
          "ONDC Buyer App"
        ],
        "description": "Provide feedback on a service",
        "requestBody": {
          "description": "Seller provides response to rating provided by buyer",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "context": {
                    "$ref": "#/components/schemas/Context"
                  },
                  "message": {
                    "$ref": "#/components/schemas/RatingAck"
                  },
                  "error": {
                    "$ref": "#/components/schemas/Error"
                  }
                },
                "required": [
                  "context"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of message received",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "ack": {
                          "$ref": "#/components/schemas/Ack"
                        }
                      },
                      "required": [
                        "ack"
                      ]
                    },
                    "error": {
                      "$ref": "#/components/schemas/Error"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/on_support": {
      "post": {
        "tags": [
          "ONDC Buyer App"
        ],
        "description": "Contact Support",
        "requestBody": {
          "description": "Seller provides Contact Support details",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "context": {
                    "$ref": "#/components/schemas/Context"
                  },
                  "message": {
                    "type": "object",
                    "properties": {
                      "phone": {
                        "type": "string",
                        "format": "phone"
                      },
                      "email": {
                        "type": "string",
                        "format": "email"
                      },
                      "uri": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  },
                  "error": {
                    "$ref": "#/components/schemas/Error"
                  }
                },
                "required": [
                  "context"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of message received",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "ack": {
                          "$ref": "#/components/schemas/Ack"
                        }
                      },
                      "required": [
                        "ack"
                      ]
                    },
                    "error": {
                      "$ref": "#/components/schemas/Error"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/on_issue": {
      "post": {
        "tags": [
          "Complaint lifecycle management"
        ],
        "description": "Send the issue resolution details object",
        "requestBody": {
          "description": "Seller confirms order",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "context": {
                    "$ref": "#/components/schemas/Context"
                  },
                  "message": {
                    "type": "object",
                    "properties": {
                      "issue": {
                        "$ref": "#/components/schemas/Issue"
                      }
                    },
                    "required": [
                      "issue"
                    ]
                  },
                  "error": {
                    "$ref": "#/components/schemas/Error"
                  }
                },
                "required": [
                  "context",
                  "message"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of message received",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "ack": {
                          "$ref": "#/components/schemas/Ack"
                        }
                      },
                      "required": [
                        "ack"
                      ]
                    },
                    "error": {
                      "$ref": "#/components/schemas/Error"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/on_issue_status": {
      "post": {
        "tags": [
          "Complaint status checks"
        ],
        "description": "Fetch the status of a complaint",
        "requestBody": {
          "description": "Seller provides status information for order",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "context": {
                    "$ref": "#/components/schemas/Context"
                  },
                  "message": {
                    "type": "object",
                    "properties": {
                      "issue": {
                        "type": "object",
                        "$ref": "#/components/schemas/Issue"
                      }
                    }
                  },
                  "error": {
                    "$ref": "#/components/schemas/Error"
                  }
                },
                "required": [
                  "context",
                  "message"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of message received",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "ack": {
                          "$ref": "#/components/schemas/Ack"
                        }
                      },
                      "required": [
                        "ack"
                      ]
                    },
                    "error": {
                      "$ref": "#/components/schemas/Error"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/get_cancellation_reasons": {
      "post": {
        "tags": [
          "Seller App Meta APIs"
        ],
        "description": "Get cancellation reasons from the Seller App",
        "requestBody": {
          "description": "Context header is sent as the request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "context": {
                    "$ref": "#/components/schemas/Context"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of message received",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "ack": {
                          "$ref": "#/components/schemas/Ack"
                        }
                      },
                      "required": [
                        "ack"
                      ]
                    },
                    "error": {
                      "$ref": "#/components/schemas/Error"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/cancellation_reasons": {
      "post": {
        "tags": [
          "Buyer App Meta APIs"
        ],
        "description": "Get cancellation reasons from the Seller App",
        "requestBody": {
          "description": "List of cancellation reasons.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "context": {
                    "$ref": "#/components/schemas/Context"
                  },
                  "message": {
                    "type": "object",
                    "properties": {
                      "cancellation_reasons": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/Option"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of message received",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "ack": {
                          "$ref": "#/components/schemas/Ack"
                        }
                      },
                      "required": [
                        "ack"
                      ]
                    },
                    "error": {
                      "$ref": "#/components/schemas/Error"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/get_return_reasons": {
      "post": {
        "tags": [
          "Seller App Meta APIs"
        ],
        "description": "Get return reasons from the Seller App",
        "requestBody": {
          "description": "Context header is sent as the request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "context": {
                    "$ref": "#/components/schemas/Context"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of message received",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "ack": {
                          "$ref": "#/components/schemas/Ack"
                        }
                      },
                      "required": [
                        "ack"
                      ]
                    },
                    "error": {
                      "$ref": "#/components/schemas/Error"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/return_reasons": {
      "post": {
        "tags": [
          "Buyer App Meta APIs"
        ],
        "description": "Get return reasons from the Seller App",
        "requestBody": {
          "description": "List of return reasons",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "context": {
                    "$ref": "#/components/schemas/Context"
                  },
                  "return_reasons": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Option"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of message received",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "ack": {
                          "$ref": "#/components/schemas/Ack"
                        }
                      },
                      "required": [
                        "ack"
                      ]
                    },
                    "error": {
                      "$ref": "#/components/schemas/Error"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/get_rating_categories": {
      "post": {
        "tags": [
          "Seller App Meta APIs"
        ],
        "description": "Get a list of categories that can be rated by the Seller App",
        "requestBody": {
          "description": "Context header is sent as the request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "context": {
                    "$ref": "#/components/schemas/Context"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of message received",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "ack": {
                          "$ref": "#/components/schemas/Ack"
                        }
                      },
                      "required": [
                        "ack"
                      ]
                    },
                    "error": {
                      "$ref": "#/components/schemas/Error"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/rating_categories": {
      "post": {
        "tags": [
          "Buyer App Meta APIs"
        ],
        "description": "Get a list of categories that can be rated by the Buyer App",
        "requestBody": {
          "description": "Array of categories which can be rated",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "context": {
                    "$ref": "#/components/schemas/Context"
                  },
                  "rating_categories": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Rating/properties/rating_category"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of message received",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "ack": {
                          "$ref": "#/components/schemas/Ack"
                        }
                      },
                      "required": [
                        "ack"
                      ]
                    },
                    "error": {
                      "$ref": "#/components/schemas/Error"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/get_feedback_categories": {
      "post": {
        "tags": [
          "Seller Meta APIs"
        ],
        "description": "Get a list of categories for which feedback can be given by the Buyer App",
        "requestBody": {
          "description": "Context header is sent as the request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "context": {
                    "$ref": "#/components/schemas/Context"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of message received",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "ack": {
                          "$ref": "#/components/schemas/Ack"
                        }
                      },
                      "required": [
                        "ack"
                      ]
                    },
                    "error": {
                      "$ref": "#/components/schemas/Error"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/feedback_categories": {
      "post": {
        "tags": [
          "Buyer App Meta APIs"
        ],
        "description": "Get a list of categories for which feedback can be given by the Buyer App",
        "requestBody": {
          "description": "Array of categories for which feedback can be given by the Buyer App",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "context": {
                    "$ref": "#/components/schemas/Context"
                  },
                  "feedback_categories": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Rating/properties/rating_category"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of message received",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "ack": {
                          "$ref": "#/components/schemas/Ack"
                        }
                      },
                      "required": [
                        "ack"
                      ]
                    },
                    "error": {
                      "$ref": "#/components/schemas/Error"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/get_feedback_form": {
      "post": {
        "tags": [
          "Seller App Meta APIs"
        ],
        "description": "Request a feedback form from the Seller App",
        "requestBody": {
          "description": "The rating value and category is sent by the Buyer App",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "context": {
                    "$ref": "#/components/schemas/Context"
                  },
                  "message": {
                    "type": "object",
                    "properties": {
                      "rating_value": {
                        "$ref": "#/components/schemas/Rating/properties/value"
                      },
                      "rating_category": {
                        "$ref": "#/components/schemas/Rating/properties/rating_category"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of message received",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "ack": {
                          "$ref": "#/components/schemas/Ack"
                        }
                      },
                      "required": [
                        "ack"
                      ]
                    },
                    "error": {
                      "$ref": "#/components/schemas/Error"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/feedback_form": {
      "post": {
        "tags": [
          "Buyer App Meta APIs"
        ],
        "description": "Get a feedback form from the Seller App",
        "requestBody": {
          "description": "Feedback form sent by the Buyer App",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "context": {
                    "$ref": "#/components/schemas/Context"
                  },
                  "message": {
                    "$ref": "#/components/schemas/Feedback"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of message received",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "ack": {
                          "$ref": "#/components/schemas/Ack"
                        }
                      },
                      "required": [
                        "ack"
                      ]
                    },
                    "error": {
                      "$ref": "#/components/schemas/Error"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "SubscriberAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "Signature of message body using Buyer App or Seller App subscriber's signing public key. <br/><br/>Format:<br/><br/><code>Authorization : Signature keyId=\"{subscriber_id}|{unique_key_id}|{algorithm}\",algorithm=\"ed25519\",created=\"1606970629\",expires=\"1607030629\",headers=\"(created) (expires) digest\",signature=\"Base64(signing string)\"</code>"
      },
      "GatewaySubscriberAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Proxy-Authorization",
        "description": "Signature of message body + BuyerApp/SellerApp's Authorization header using Gateway's signing public key. Format:<br/><br/><code>Proxy-Authorization : Signature keyId=\"{subscriber_id}|{unique_key_id}|{algorithm}\",algorithm=\"ed25519\",created=\"1606970629\",expires=\"1607030629\",headers=\"(created) (expires) digest\",signature=\"Base64(signing string)\"</code><p><b>Note:</b>This header will be deprecated soon and will no longer be supported in future releases. New implementors are requested to use the X-Gateway-Authorization header. Existing implementations are requested to migrate their header to the new header. The deprecation date will be set after discussion as per the standard specification governance process.</p>"
      },
      "GatewaySubscriberAuthNew": {
        "type": "apiKey",
        "in": "header",
        "name": "X-Gateway-Authorization",
        "description": "Signature of message body + BuyerApp/SellerApp's Authorization header using Gateway's signing public key. Format:<br/><br/><code>X-Gateway-Authorization : Signature keyId=\"{subscriber_id}|{unique_key_id}|{algorithm}\",algorithm=\"ed25519\",created=\"1606970629\",expires=\"1607030629\",headers=\"(created) (expires) digest\",signature=\"Base64(signing string)\"</code>"
      }
    },
    "schemas": {
      "Ack": {
        "description": "Describes the ACK response",
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Describe the status of the ACK response. If schema validation passes, status is ACK else it is NACK",
            "enum": [
              "ACK",
              "NACK"
            ]
          }
        },
        "required": [
          "status"
        ]
      },
      "AddOn": {
        "description": "Describes an add-on",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the add-on. This follows the syntax {item.id}/add-on/{add-on unique id} for item specific add-on OR "
          },
          "descriptor": {
            "$ref": "#/components/schemas/Descriptor"
          },
          "price": {
            "$ref": "#/components/schemas/Price"
          }
        }
      },
      "Address": {
        "description": "Describes an address",
        "type": "object",
        "properties": {
          "door": {
            "type": "string",
            "description": "Door / Shop number of the address"
          },
          "name": {
            "type": "string",
            "description": "Name of address if applicable. Example, shop name"
          },
          "building": {
            "type": "string",
            "description": "Name of the building or block"
          },
          "street": {
            "type": "string",
            "description": "Street name or number"
          },
          "locality": {
            "type": "string",
            "description": "Name of the locality, apartments"
          },
          "ward": {
            "type": "string",
            "description": "Name or number of the ward if applicable"
          },
          "city": {
            "type": "string",
            "description": "City name"
          },
          "state": {
            "type": "string",
            "description": "State name"
          },
          "country": {
            "type": "string",
            "description": "Country name"
          },
          "area_code": {
            "type": "string",
            "description": "Area code. This can be Pincode, ZIP code or any equivalent"
          }
        }
      },
      "Agent": {
        "description": "Describes an order executor",
        "allOf": [
          {
            "$ref": "#/components/schemas/Person"
          },
          {
            "$ref": "#/components/schemas/Contact"
          },
          {
            "type": "object",
            "properties": {
              "rateable": {
                "$ref": "#/components/schemas/Rateable"
              }
            }
          }
        ]
      },
      "Authorization": {
        "description": "Describes an authorization mechanism",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of authorization mechanism used"
          },
          "token": {
            "type": "string",
            "description": "Token used for authorization"
          },
          "valid_from": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp in RFC3339 format from which token is valid"
          },
          "valid_to": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp in RFC3339 format until which token is valid"
          },
          "status": {
            "type": "string",
            "description": "Status of the token"
          }
        }
      },
      "Billing": {
        "description": "Describes a billing event",
        "type": "object",
        "properties": {
          "name": {
            "description": "Personal details of the customer needed for billing.",
            "type": "string"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "phone": {
            "type": "string"
          },
          "time": {
            "$ref": "#/components/schemas/Time"
          },
          "tax_number": {
            "description": "GST number",
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "name",
          "phone"
        ]
      },
      "Cancellation": {
        "description": "Describes a cancellation event",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "full",
              "partial"
            ]
          },
          "ref_id": {
            "type": "string"
          },
          "policies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Policy"
            }
          },
          "time": {
            "type": "string",
            "format": "date-time"
          },
          "cancelled_by": {
            "type": "string"
          },
          "reasons": {
            "$ref": "#/components/schemas/Option"
          },
          "selected_reason": {
            "type": "object",
            "properties": {
              "id": {
                "$ref": "#/components/schemas/Option/properties/id"
              }
            }
          },
          "additional_description": {
            "$ref": "#/components/schemas/Descriptor"
          }
        }
      },
      "Catalog": {
        "description": "Describes a Seller App catalog",
        "type": "object",
        "properties": {
          "bpp/descriptor": {
            "$ref": "#/components/schemas/Descriptor"
          },
          "bpp/categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category"
            }
          },
          "bpp/fulfillments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Fulfillment"
            }
          },
          "bpp/payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Payment"
            }
          },
          "bpp/offers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Offer"
            }
          },
          "bpp/providers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Provider"
            },
            "required": [
              "descriptor.name",
              "locations.gps",
              "items.descriptor.name"
            ]
          },
          "exp": {
            "type": "string",
            "description": "Time after which catalog has to be refreshed",
            "format": "date-time"
          }
        },
        "required": [
          "bpp/providers"
        ]
      },
      "Category": {
        "description": "Describes a category.",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique id of the category",
            "enum": [
              "Express Delivery",
              "Standard Delivery",
              "Immediate Delivery",
              "Same Day Delivery",
              "Next Day Delivery"
            ]
          },
          "parent_category_id": {
            "type": "string",
            "description": "Unique id of the parent category - Express delivery - Standard Delivery"
          },
          "descriptor": {
            "$ref": "#/components/schemas/Descriptor"
          },
          "time": {
            "$ref": "#/components/schemas/Time"
          },
          "tags": {
            "$ref": "#/components/schemas/Tags"
          }
        }
      },
      "Circle": {
        "description": "Describes a circular area on the map",
        "type": "object",
        "properties": {
          "gps": {
            "$ref": "#/components/schemas/Gps"
          },
          "radius": {
            "$ref": "#/components/schemas/Scalar"
          }
        },
        "required": [
          "gps",
          "radius"
        ]
      },
      "City": {
        "description": "Describes a city",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the city"
          },
          "code": {
            "type": "string",
            "description": "Codification of city code will be using the std code of the city e.g. for Bengaluru, city code is 'std:080'"
          }
        }
      },
      "Contact": {
        "type": "object",
        "properties": {
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "tags": {
            "$ref": "#/components/schemas/Tags"
          }
        }
      },
      "Context": {
        "description": "Describes a ONDC message context",
        "type": "object",
        "properties": {
          "domain": {
            "$ref": "#/components/schemas/Domain"
          },
          "country": {
            "$ref": "#/components/schemas/Country/properties/code"
          },
          "city": {
            "$ref": "#/components/schemas/City/properties/code"
          },
          "action": {
            "type": "string",
            "description": "Defines the ONDC API call. Any actions other than the enumerated actions are not supported by ONDC Protocol",
            "enum": [
              "search",
              "select",
              "init",
              "confirm",
              "update",
              "status",
              "track",
              "cancel",
              "rating",
              "support",
              "on_search",
              "on_select",
              "on_init",
              "on_confirm",
              "on_update",
              "on_status",
              "on_track",
              "on_cancel",
              "on_rating",
              "on_support"
            ]
          },
          "core_version": {
            "type": "string",
            "description": "Version of ONDC core API specification being used"
          },
          "bap_id": {
            "type": "string",
            "description": "Unique id of the Buyer App. By default it is the fully qualified domain name of the Buyer App"
          },
          "bap_uri": {
            "type": "string",
            "format": "uri",
            "description": "URI of the Buyer App for accepting callbacks. Must have the same domain name as the bap_id"
          },
          "bpp_id": {
            "type": "string",
            "description": "Unique id of the Seller App. By default it is the fully qualified domain name of the Seller App, mandatory for all peer-to-peer API requests, i.e. except search and on_search"
          },
          "bpp_uri": {
            "type": "string",
            "format": "uri",
            "description": "URI of the Seller App. Must have the same domain name as the bap_id, mandatory for all peer-to-peer API requests, i.e. except search and on_search"
          },
          "transaction_id": {
            "type": "string",
            "description": "This is a unique value which persists across all API calls from search through confirm"
          },
          "message_id": {
            "type": "string",
            "description": "This is a unique value which persists during a request / callback cycle"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Time of request generation in RFC3339 format"
          },
          "key": {
            "type": "string",
            "description": "The encryption public key of the sender"
          },
          "ttl": {
            "type": "string",
            "description": "Timestamp for which this message holds valid in ISO8601 durations format - Outer limit for ttl for search, select, init, confirm, status, track, cancel, update, rating, support is 'PT30S' which is 30 seconds, different buyer apps can change this to meet their UX requirements, but it shouldn't exceed this outer limit"
          }
        },
        "required": [
          "domain",
          "action",
          "core_version",
          "bap_id",
          "bap_uri",
          "transaction_id",
          "message_id",
          "city",
          "country",
          "timestamp"
        ]
      },
      "Country": {
        "description": "Describes a country.",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the country"
          },
          "code": {
            "type": "string",
            "description": "Country code as per ISO 3166 Alpha-3 code format"
          }
        }
      },
      "DecimalValue": {
        "description": "Describes a decimal value",
        "type": "string",
        "pattern": "[+-]?([0-9]*[.])?[0-9]+"
      },
      "Descriptor": {
        "description": "Describes the description of a real-world object.",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          },
          "short_desc": {
            "type": "string"
          },
          "long_desc": {
            "type": "string"
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Image"
            }
          },
          "audio": {
            "type": "string",
            "format": "uri"
          },
          "3d_render": {
            "type": "string",
            "format": "uri"
          }
        }
      },
      "Dimensions": {
        "description": "Describes the dimensions of a real-world object",
        "type": "object",
        "properties": {
          "length": {
            "$ref": "#/components/schemas/Scalar"
          },
          "breadth": {
            "$ref": "#/components/schemas/Scalar"
          },
          "height": {
            "$ref": "#/components/schemas/Scalar"
          }
        }
      },
      "Document": {
        "description": "Describes a document which can be sent as a url",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri"
          },
          "label": {
            "type": "string"
          }
        }
      },
      "Domain": {
        "description": "Codification of domain for ONDC",
        "type": "string",
        "enum": [
          "nic2004:60232"
        ]
      },
      "Duration": {
        "description": "Describes duration as per ISO8601 format",
        "type": "string"
      },
      "Error": {
        "description": "Describes an error object",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "CONTEXT-ERROR",
              "CORE-ERROR",
              "DOMAIN-ERROR",
              "POLICY-ERROR",
              "JSON-SCHEMA-ERROR"
            ]
          },
          "code": {
            "type": "string",
            "description": "ONDC specific error code. For full list of error codes, refer to docs/drafts/Error Codes.md of this repo"
          },
          "path": {
            "type": "string",
            "description": "Path to json schema generating the error. Used only during json schema validation errors"
          },
          "message": {
            "type": "string",
            "description": "Human readable message describing the error"
          }
        },
        "required": [
          "type",
          "code"
        ]
      },
      "Feedback": {
        "description": "Feedback for a service",
        "type": "object",
        "properties": {
          "feedback_form": {
            "$ref": "#/components/schemas/FeedbackForm"
          },
          "feedback_url": {
            "$ref": "#/components/schemas/FeedbackUrl"
          }
        }
      },
      "FeedbackForm": {
        "description": "Describes a feedback form that a Seller App can send to get feedback from the Buyer App",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/FeedbackFormElement"
        }
      },
      "FeedbackFormElement": {
        "description": "An element in the feedback form. It can be question or an answer to the question.",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "parent_id": {
            "$ref": "#/components/schemas/FeedbackFormElement/properties/id"
          },
          "question": {
            "description": "Specifies the question to which the answer options will be contained in the child FeedbackFormElements",
            "type": "string"
          },
          "answer": {
            "description": "Specifies an answer option to which the question will be in the FeedbackFormElement specified in parent_id",
            "type": "string"
          },
          "answer_type": {
            "description": "Specifies how the answer option should be rendered.",
            "type": "string",
            "enum": [
              "radio",
              "checkbox",
              "text"
            ]
          }
        }
      },
      "FeedbackUrl": {
        "description": "Describes how a feedback URL will be sent by the Seller App",
        "type": "object",
        "properties": {
          "url": {
            "description": "feedback URL sent by the Seller App",
            "type": "string",
            "format": "uri"
          },
          "tl_method": {
            "type": "string",
            "enum": [
              "http/get",
              "http/post"
            ]
          },
          "params": {
            "type": "object",
            "properties": {
              "feedback_id": {
                "type": "string",
                "description": "This value will be placed in the the $feedback_id url param in case of http/get and in the requestBody http/post requests"
              }
            },
            "additionalProperties": {
              "type": "string"
            },
            "required": [
              "feedback_id"
            ]
          }
        }
      },
      "Fulfillment": {
        "description": "Describes how a single product/service will be rendered/fulfilled to the end customer - Use tags to communicate if order is ready to ship - Order ready to ship - \"@ondc/org/order_ready_to_ship\" (pass \"Yes\")",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique reference ID to the fulfillment of an order"
          },
          "type": {
            "type": "string",
            "description": "This describes the type of fulfillment",
            "enum": [
              "CoD",
              "Prepaid",
              "RTO",
              "Reverse QC"
            ]
          },
          "@ondc/org/awb_no": {
            "type": [ "string", "null" ]
          },
          "@ondc/org/ewaybillno": {
            "type": "string"
          },
          "@ondc/org/ebnexpirydate": {
            "type": "string",
            "format": "date-time"
          },
          "provider_id": {
            "$ref": "#/components/schemas/Provider/properties/id"
          },
          "rating": {
            "$ref": "#/components/schemas/Rating/properties/value"
          },
          "state": {
            "$ref": "#/components/schemas/State"
          },
          "tracking": {
            "type": "boolean",
            "description": "Indicates whether the fulfillment allows tracking",
            "default": false
          },
          "customer": {
            "type": "object",
            "properties": {
              "person": {
                "$ref": "#/components/schemas/Person"
              },
              "contact": {
                "$ref": "#/components/schemas/Contact"
              }
            }
          },
          "person": {
            "$ref": "#/components/schemas/Person"
          },
          "contact": {
            "$ref": "#/components/schemas/Contact"
          },
          "vehicle": {
            "$ref": "#/components/schemas/Vehicle"
          },
          "start": {
            "description": "Details on the start of fulfillment",
            "type": "object",
            "properties": {
              "location": {
                "$ref": "#/components/schemas/Location"
              },
              "time": {
                "$ref": "#/components/schemas/Time"
              },
              "instructions": {
                "$ref": "#/components/schemas/Descriptor"
              },
              "contact": {
                "$ref": "#/components/schemas/Contact"
              },
              "person": {
                "$ref": "#/components/schemas/Person"
              },
              "authorization": {
                "$ref": "#/components/schemas/Authorization"
              }
            }
          },
          "end": {
            "description": "Details on the end of fulfillment",
            "type": "object",
            "properties": {
              "location": {
                "$ref": "#/components/schemas/Location"
              },
              "time": {
                "$ref": "#/components/schemas/Time"
              },
              "instructions": {
                "$ref": "#/components/schemas/Descriptor"
              },
              "contact": {
                "$ref": "#/components/schemas/Contact"
              },
              "person": {
                "$ref": "#/components/schemas/Person"
              },
              "authorization": {
                "$ref": "#/components/schemas/Authorization"
              }
            }
          },
          "rateable": {
            "$ref": "#/components/schemas/Rateable"
          },
          "tags": {
            "$ref": "#/components/schemas/Tags"
          }
        }
      },
      "Gps": {
        "description": "Describes a gps coordinate",
        "type": "string",
        "pattern": "^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?),\\s*[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?)$"
      },
      "Image": {
        "description": "Image of an object. <br/><br/> A url based image will look like <br/><br/>```uri:http://path/to/image``` <br/><br/> An image can also be sent as a data string. For example : <br/><br/> ```data:js87y34ilhriuho84r3i4```",
        "type": "string"
      },
      "Intent": {
        "description": "Intent of a user. Used for searching for services",
        "type": "object",
        "properties": {
          "descriptor": {
            "$ref": "#/components/schemas/Descriptor"
          },
          "provider": {
            "$ref": "#/components/schemas/Provider"
          },
          "fulfillment": {
            "$ref": "#/components/schemas/Fulfillment"
          },
          "payment": {
            "$ref": "#/components/schemas/Payment"
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "offer": {
            "$ref": "#/components/schemas/Offer"
          },
          "item": {
            "$ref": "#/components/schemas/Item"
          },
          "@ondc/org/payload_details": {
            "type": "object",
            "description": "payload details that will allow logistics provider to determine serviceability. For weight, enums for unit are - \"Kilogram\", \"Gram\" For dimensions, enums for length.unit, breadth.unit and height.unit are - \"meter\", \"centimeter\"",
            "properties": {
              "weight": {
                "$ref": "#/components/schemas/Scalar"
              },
              "dimensions": {
                "$ref": "#/components/schemas/Dimensions"
              },
              "category": {
                "type": "string"
              },
              "value": {
                "$ref": "#/components/schemas/Price"
              },
              "dangerous_goods": {
                "type": "boolean"
              }
            }
          },
          "tags": {
            "$ref": "#/components/schemas/Tags"
          }
        }
      },
      "ItemQuantity": {
        "description": "Describes count or amount of an item",
        "type": "object",
        "properties": {
          "allocated": {
            "type": "object",
            "properties": {
              "count": {
                "type": "integer",
                "minimum": 0
              },
              "measure": {
                "$ref": "#/components/schemas/Scalar"
              }
            }
          },
          "available": {
            "type": "object",
            "properties": {
              "count": {
                "type": "integer",
                "minimum": 0
              },
              "measure": {
                "$ref": "#/components/schemas/Scalar"
              }
            }
          },
          "maximum": {
            "type": "object",
            "properties": {
              "count": {
                "type": "integer",
                "minimum": 1
              },
              "measure": {
                "$ref": "#/components/schemas/Scalar"
              }
            }
          },
          "minimum": {
            "type": "object",
            "properties": {
              "count": {
                "type": "integer",
                "minimum": 0
              },
              "measure": {
                "$ref": "#/components/schemas/Scalar"
              }
            }
          },
          "selected": {
            "type": "object",
            "properties": {
              "count": {
                "type": "integer",
                "minimum": 0
              },
              "measure": {
                "$ref": "#/components/schemas/Scalar"
              }
            }
          }
        }
      },
      "Item": {
        "description": "Describes a product or a service offered to the end consumer by the provider.",
        "type": "object",
        "properties": {
          "id": {
            "description": "This is the most unique identifier of a service item. An example of an Item ID could be the SKU of a product.",
            "type": "string"
          },
          "parent_item_id": {
            "$ref": "#/components/schemas/Item/properties/id"
          },
          "descriptor": {
            "$ref": "#/components/schemas/Descriptor"
          },
          "price": {
            "$ref": "#/components/schemas/Price"
          },
          "category_id": {
            "$ref": "#/components/schemas/Category/properties/id"
          },
          "fulfillment_id": {
            "$ref": "#/components/schemas/Fulfillment/properties/id"
          },
          "rating": {
            "$ref": "#/components/schemas/Rating/properties/value"
          },
          "location_id": {
            "$ref": "#/components/schemas/Location/properties/id"
          },
          "time": {
            "$ref": "#/components/schemas/Time"
          },
          "rateable": {
            "$ref": "#/components/schemas/Rateable"
          },
          "matched": {
            "type": "boolean"
          },
          "related": {
            "type": "boolean"
          },
          "recommended": {
            "type": "boolean"
          },
          "tags": {
            "$ref": "#/components/schemas/Tags"
          }
        },
        "required": [
          "id",
          "category_id"
        ]
      },
      "Language": {
        "description": "indicates language code. ONDC supports language codes as per ISO 639.2 standard",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          }
        }
      },
      "Location": {
        "description": "Describes the location of a runtime object.",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "descriptor": {
            "$ref": "#/components/schemas/Descriptor"
          },
          "gps": {
            "$ref": "#/components/schemas/Gps"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "station_code": {
            "type": "string"
          },
          "city": {
            "$ref": "#/components/schemas/City"
          },
          "country": {
            "$ref": "#/components/schemas/Country"
          },
          "circle": {
            "$ref": "#/components/schemas/Circle"
          },
          "polygon": {
            "type": "string"
          },
          "3dspace": {
            "type": "string"
          },
          "time": {
            "$ref": "#/components/schemas/Time"
          }
        }
      },
      "Name": {
        "type": "string",
        "description": "Describes the name of a person"
      },
      "Offer": {
        "description": "Describes an offer",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "descriptor": {
            "$ref": "#/components/schemas/Descriptor"
          },
          "location_ids": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Location/properties/id"
            }
          },
          "category_ids": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category/properties/id"
            }
          },
          "item_ids": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Item/properties/id"
            }
          },
          "time": {
            "$ref": "#/components/schemas/Time"
          }
        }
      },
      "Operator": {
        "description": "Describes the agent of a service",
        "allOf": [
          {
            "$ref": "#/components/schemas/Person"
          },
          {
            "properties": {
              "experience": {
                "type": "object",
                "properties": {
                  "label": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  },
                  "unit": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "Option": {
        "description": "Describes a selectable option",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "descriptor": {
            "$ref": "#/components/schemas/Descriptor"
          }
        }
      },
      "Order": {
        "description": "Describes the details of an order - For \"@ondc/org/cancellation.cancelled_by\" use following values - buyer-app, seller-app, logistics-provider",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for Order across network, will be created by buyer app in confirm API"
          },
          "state": {
            "type": "string"
          },
          "provider": {
            "type": "object",
            "properties": {
              "id": {
                "$ref": "#/components/schemas/Provider/properties/id"
              },
              "locations": {
                "type": "array",
                "maxItems": 1,
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/Location/properties/id"
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              }
            }
          },
          "items": {
            "type": "array",
            "maxItems": 1,
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/Item/properties/id"
                },
                "category_id": {
                  "$ref": "#/components/schemas/Category/properties/id"
                },
                "quantity": {
                  "$ref": "#/components/schemas/ItemQuantity/properties/selected"
                }
              },
              "required": [
                "id"
              ]
            }
          },
          "add_ons": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/AddOn/properties/id"
                }
              },
              "required": [
                "id"
              ]
            }
          },
          "offers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/Offer/properties/id"
                }
              },
              "required": [
                "id"
              ]
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            }
          },
          "billing": {
            "$ref": "#/components/schemas/Billing"
          },
          "fulfillments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Fulfillment"
            }
          },
          "quote": {
            "$ref": "#/components/schemas/Quotation"
          },
          "payment": {
            "$ref": "#/components/schemas/Payment"
          },
          "created_at": {
            "type": [ "string", "null" ],
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "@ondc/org/created_by": {
            "description": "order created by",
            "type": "string",
            "enum": [
              "buyer-app",
              "seller-app"
            ]
          },
          "@ondc/org/cancellation": {
            "$ref": "#/components/schemas/Cancellation"
          },
          "@ondc/org/linked_order": {
            "type": "object",
            "description": "payload for linked order e.g. retail order that cascaded into this logistics order",
            "properties": {
              "items": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "category_id": {
                      "type": "string"
                    },
                    "descriptor": {
                      "$ref": "#/components/schemas/Descriptor"
                    },
                    "quantity": {
                      "$ref": "#/components/schemas/ItemQuantity/properties/selected"
                    },
                    "price": {
                      "$ref": "#/components/schemas/Price"
                    }
                  }
                }
              },
              "provider": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/Provider/properties/id"
                  },
                  "descriptor": {
                    "$ref": "#/components/schemas/Descriptor"
                  },
                  "address": {
                    "$ref": "#/components/schemas/Address"
                  }
                }
              },
              "order": {
                "description": "use same units for weight and dimensions as defined for Intent",
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/Order/properties/id"
                  },
                  "weight": {
                    "$ref": "#/components/schemas/Scalar"
                  },
                  "dimensions": {
                    "$ref": "#/components/schemas/Dimensions"
                  },
                  "declared_value": {
                    "$ref": "#/components/schemas/Price"
                  },
                  "taxable_value": {
                    "$ref": "#/components/schemas/Price"
                  },
                  "hsn_code": {
                    "type": "string"
                  },
                  "sgst_amount": {
                    "$ref": "#/components/schemas/DecimalValue"
                  },
                  "cgst_amount": {
                    "$ref": "#/components/schemas/DecimalValue"
                  },
                  "igst_amount": {
                    "$ref": "#/components/schemas/DecimalValue"
                  }
                }
              }
            }
          }
        }
      },
      "Organization": {
        "description": "Describes an organization",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "cred": {
            "type": "string"
          }
        }
      },
      "Page": {
        "description": "Describes a page in a search result",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "next_id": {
            "type": "string"
          }
        }
      },
      "Payment": {
        "description": "Describes a payment",
        "type": "object",
        "properties": {
          "uri": {
            "type": "string",
            "description": "A payment uri to be called by the Buyer App. If empty, then the payment is to be done offline. The details of payment should be present in the params object. If ```tl_method``` = http/get, then the payment details will be sent as url params. Two url param values, ```$transaction_id``` and ```$amount``` are mandatory. And example url would be : https://www.example.com/pay?txid=$transaction_id&amount=$amount&vpa=upiid&payee=shopez&billno=1234",
            "format": "uri"
          },
          "tl_method": {
            "type": "string",
            "enum": [
              "http/get",
              "http/post",
              "payto",
              "upi"
            ]
          },
          "params": {
            "type": "object",
            "properties": {
              "transaction_id": {
                "type": "string",
                "description": "This value will be placed in the the $transaction_id url param in case of http/get and in the requestBody http/post requests"
              },
              "transaction_status": {
                "type": "string"
              },
              "amount": {
                "$ref": "#/components/schemas/Price/properties/value"
              },
              "currency": {
                "$ref": "#/components/schemas/Price/properties/currency"
              }
            },
            "additionalProperties": {
              "type": "string"
            },
            "required": [
              "currency"
            ]
          },
          "type": {
            "type": "string",
            "enum": [
              "ON-ORDER",
              "PRE-FULFILLMENT",
              "ON-FULFILLMENT",
              "POST-FULFILLMENT"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "PAID",
              "NOT-PAID",
              "PENDING"
            ]
          },
          "time": {
            "$ref": "#/components/schemas/Time"
          },
          "collected_by": {
            "type": "string",
            "enum": [
              "BAP",
              "BPP"
            ]
          },
          "@ondc/org/collection_amount": {
            "description": "CoD collection amount",
            "type": "string"
          },
          "@ondc/org/settlement_window": {
            "description": "settlement window in ISO8601 durations format e.g. 'PT48H' indicates T+2 settlement",
            "type": "string"
          },
          "@ondc/org/settlement_window_status": {
            "type": "string",
            "enum": [
              "Assert",
              "Agree",
              "Disagree",
              "Terminate"
            ]
          },
          "@ondc/org/settlement_details": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "settlement_counterparty": {
                  "type": "string",
                  "enum": [
                    "buyer-app",
                    "seller-app"
                  ]
                },
                "settlement_type": {
                  "type": "string",
                  "enum": [
                    "neft",
                    "rtgs",
                    "upi"
                  ]
                },
                "settlement_bank_account_no": {
                  "type": "string"
                },
                "settlement_ifsc_code": {
                  "type": "string"
                },
                "upi_address": {
                  "description": "UPI payment address e.g. VPA",
                  "type": "string"
                },
                "settlement_status": {
                  "type": "string",
                  "enum": [
                    "PAID",
                    "NOT-PAID"
                  ]
                },
                "settlement_reference": {
                  "description": "Settlement transaction reference number",
                  "type": "string"
                },
                "settlement_timestamp": {
                  "description": "Settlement transaction timestamp",
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        }
      },
      "Person": {
        "description": "Describes a person.",
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "image": {
            "$ref": "#/components/schemas/Image"
          },
          "dob": {
            "type": "string",
            "format": "date"
          },
          "gender": {
            "type": "string",
            "description": "Gender of something, typically a Person, but possibly also fictional characters, animals, etc. While Male and Female may be used, text strings are also acceptable for people who do not identify as a binary gender"
          },
          "cred": {
            "type": "string"
          },
          "tags": {
            "$ref": "#/components/schemas/Tags"
          }
        }
      },
      "Policy": {
        "description": "Describes a policy. Allows for domain extension.",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "descriptor": {
            "$ref": "#/components/schemas/Descriptor"
          },
          "parent_policy_id": {
            "$ref": "#/components/schemas/Policy/properties/id"
          },
          "time": {
            "$ref": "#/components/schemas/Time"
          }
        }
      },
      "Price": {
        "description": "Describes the price of an item. Allows for domain extension.",
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "ISO 4217 alphabetic currency code e.g. 'INR'"
          },
          "value": {
            "$ref": "#/components/schemas/DecimalValue"
          },
          "estimated_value": {
            "$ref": "#/components/schemas/DecimalValue"
          },
          "computed_value": {
            "$ref": "#/components/schemas/DecimalValue"
          },
          "listed_value": {
            "$ref": "#/components/schemas/DecimalValue"
          },
          "offered_value": {
            "$ref": "#/components/schemas/DecimalValue"
          },
          "minimum_value": {
            "$ref": "#/components/schemas/DecimalValue"
          },
          "maximum_value": {
            "$ref": "#/components/schemas/DecimalValue"
          }
        },
        "required": [
          "currency",
          "value"
        ]
      },
      "Provider": {
        "description": "Describes a service provider. This can be a restaurant, a hospital, a Store etc",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the provider"
          },
          "descriptor": {
            "$ref": "#/components/schemas/Descriptor"
          },
          "category_id": {
            "type": "string",
            "description": "Category Id of the provider"
          },
          "rating": {
            "$ref": "#/components/schemas/Rating/properties/value"
          },
          "time": {
            "$ref": "#/components/schemas/Time"
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category"
            }
          },
          "fulfillments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Fulfillment"
            }
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Payment"
            }
          },
          "locations": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Location"
                },
                {
                  "type": "object",
                  "properties": {
                    "rateable": {
                      "$ref": "#/components/schemas/Rateable"
                    }
                  }
                }
              ]
            }
          },
          "offers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Offer"
            }
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Item"
            }
          },
          "exp": {
            "type": "string",
            "description": "Time after which catalog has to be refreshed",
            "format": "date-time"
          },
          "rateable": {
            "$ref": "#/components/schemas/Rateable"
          },
          "tags": {
            "$ref": "#/components/schemas/Tags"
          }
        }
      },
      "Quotation": {
        "description": "Describes a quote",
        "type": "object",
        "properties": {
          "price": {
            "$ref": "#/components/schemas/Price"
          },
          "breakup": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "@ondc/org/item_id": {
                  "$ref": "#/components/schemas/Item/properties/id"
                },
                "@ondc/org/title_type": {
                  "type": "string",
                  "enum": [
                    "Delivery Charge",
                    "RTO Charge",
                    "Reverse QC Charge",
                    "Tax"
                  ]
                },
                "title": {
                  "type": "string"
                },
                "price": {
                  "$ref": "#/components/schemas/Price"
                }
              }
            }
          },
          "ttl": {
            "$ref": "#/components/schemas/Duration"
          }
        }
      },
      "Rateable": {
        "description": "If the entity can be rated or not",
        "type": "boolean"
      },
      "Rating": {
        "description": "Describes the rating of a person or an object.",
        "type": "object",
        "properties": {
          "rating_category": {
            "description": "Category of the object being rated",
            "type": "string"
          },
          "id": {
            "description": "Id of the object being rated",
            "type": "string"
          },
          "value": {
            "description": "Rating value given to the object (1 - Poor; 2 - Needs improvement; 3 - Satisfactory; 4 - Good; 5 - Excellent)",
            "type": "number",
            "minimum": 1,
            "maximum": 5
          },
          "feedback_form": {
            "$ref": "#/components/schemas/FeedbackForm"
          },
          "feedback_id": {
            "$ref": "#/components/schemas/FeedbackUrl/properties/params/properties/feedback_id"
          }
        }
      },
      "RatingAck": {
        "type": "object",
        "properties": {
          "feedback_ack": {
            "description": "If feedback has been recorded or not",
            "type": "boolean"
          },
          "rating_ack": {
            "description": "If rating has been recorded or not",
            "type": "boolean"
          }
        }
      },
      "Scalar": {
        "description": "An object representing a scalar quantity.",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "CONSTANT",
              "VARIABLE"
            ]
          },
          "value": {
            "type": "number"
          },
          "estimated_value": {
            "type": "number"
          },
          "computed_value": {
            "type": "number"
          },
          "range": {
            "type": "object",
            "properties": {
              "min": {
                "type": "number"
              },
              "max": {
                "type": "number"
              }
            }
          },
          "unit": {
            "type": "string"
          }
        },
        "required": [
          "value",
          "unit"
        ]
      },
      "Schedule": {
        "description": "Describes a schedule",
        "type": "object",
        "properties": {
          "frequency": {
            "$ref": "#/components/schemas/Duration"
          },
          "holidays": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "times": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          }
        }
      },
      "State": {
        "description": "Describes a state",
        "type": "object",
        "properties": {
          "descriptor": {
            "$ref": "#/components/schemas/Descriptor"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_by": {
            "type": "string",
            "description": "ID of entity which changed the state"
          }
        }
      },
      "Subscriber": {
        "type": "object",
        "description": "Any entity which wants to authenticate itself on a network. This can be a Buyer App, Seller App or Gateway.",
        "properties": {
          "subscriber_id": {
            "type": "string",
            "description": "Registered domain name of the subscriber. Must have a valid SSL certificate issued by a Certificate Authority of the operating region"
          },
          "type": {
            "type": "string",
            "enum": [
              "bap",
              "bpp",
              "bg"
            ]
          },
          "cb_url": {
            "type": "string",
            "description": "Callback URL of the subscriber. The Registry will call this URL's on_subscribe API to validate the subscriber\\'s credentials"
          },
          "domain": {
            "$ref": "#/components/schemas/Domain"
          },
          "city": {
            "$ref": "#/components/schemas/City/properties/code"
          },
          "country": {
            "$ref": "#/components/schemas/Country/properties/code"
          },
          "signing_public_key": {
            "type": "string",
            "description": "Signing Public key of the subscriber. <br/><br/>Any subscriber platform (Buyer App, Seller App, Gateway) who wants to transact on the network must digitally sign the ```requestBody``` using the corresponding private key of this public key and send it in the transport layer header. In case of ```HTTP``` it is the ```Authorization``` header. <br><br/>The ```Authorization``` will be used to validate the signature of a Buyer App or Seller App.<br/><br/>Furthermore, if an API call is being proxied or multicast by a ONDC Gateway, the Gateway must use it\\'s signing key to digitally sign the ```requestBody``` using the corresponding private key of this public key and send it in the ```X-Gateway-Authorization``` header."
          },
          "encryption_public_key": {
            "type": "string",
            "description": "Encryption public key of the Buyer App. Any Seller App must encrypt the ```requestBody.message``` value of the ```on_search``` API using this public key."
          },
          "status": {
            "type": "string",
            "enum": [
              "INITIATED",
              "UNDER_SUBSCRIPTION",
              "SUBSCRIBED",
              "INVALID_SSL",
              "UNSUBSCRIBED"
            ]
          },
          "created": {
            "type": "string",
            "description": "Timestamp when a subscriber was added to the registry with status = INITIATED",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          },
          "expires": {
            "type": "string",
            "description": "Expiry timestamp in UTC derived from the ```lease_time``` of the subscriber",
            "format": "date-time"
          }
        }
      },
      "Support": {
        "description": "Customer support",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "order",
              "billing",
              "fulfillment"
            ]
          },
          "ref_id": {
            "type": "string"
          },
          "channels": {
            "$ref": "#/components/schemas/Tags"
          }
        }
      },
      "Tags": {
        "description": "Describes a tag. This is a simple key-value store which is used to contain extended metadata",
        "additionalProperties": {
          "type": "string"
        }
      },
      "Time": {
        "description": "Describes time in its various forms. It can be a single point in time; duration; or a structured timetable of operations",
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "duration": {
            "$ref": "#/components/schemas/Duration"
          },
          "range": {
            "type": "object",
            "properties": {
              "start": {
                "type": "string",
                "format": "date-time"
              },
              "end": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "days": {
            "type": "string",
            "description": "comma separated values representing days of the week"
          },
          "schedule": {
            "$ref": "#/components/schemas/Schedule"
          }
        }
      },
      "TrackingData": {
        "description": "Describes tracking data object during live tracking of an order",
        "$ref": "#/components/schemas/Location/properties/gps"
      },
      "Tracking": {
        "description": "Describes the tracking info of an object",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "inactive"
            ]
          }
        }
      },
      "Vehicle": {
        "description": "Describes the properties of a vehicle used in a mobility service",
        "type": "object",
        "properties": {
          "category": {
            "type": "string"
          },
          "capacity": {
            "type": "integer"
          },
          "make": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "size": {
            "type": "string"
          },
          "variant": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "energy_type": {
            "type": "string"
          },
          "registration": {
            "type": "string"
          }
        }
      },
      "Complainant": {
        "description": "- Describes an entity that raises a complaint with an interfacing app. \n- The complainant may be an end user (buyer or seller) or a network participant (buyer app/ seller app/ logistic services  provider app)\n",
        "type": "object",
        "properties": {
          "person": {
            "$ref": "#/components/schemas/Person"
          },
          "contact": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Contact"
              },
              {
                "required": [
                  "phone"
                ]
              }
            ]
          }
        },
        "required": [
          "contact"
        ]
      },
      "ResolutionProvider": {
        "description": "Describes the details of the entity that provides the resolution for the issue",
        "type": "object",
        "properties": {
          "respondent_info": {
            "description": "the respondent represents the details of the entity identfied by the resolution provider or the complainant himself (when he has to select the ODRs)",
            "type": "object",
            "properties": {
              "type": {
                "description": "Indicates the type of the resolution provider NP type.\n### TYPES\n1. Interfacing NP : indicating the NP where or through which the issue is raised\n2. Transaction Counterparty NP : indicating the first level of transaction counterparty network provider with which the interfacing NP is interacting with to get an issue resolution.\n3. Cascaded Counterparty NP : indicating the second or any further downstream levels of counterparty network provider with which the NP is interacting with to get an issue resolution.\n",
                "type": "string",
                "enum": [
                  "INTERFACING-NP",
                  "TRANSACTION-COUNTERPARTY-NP",
                  "CASCADED-COUNTERPARTY-NP"
                ]
              },
              "organization": {
                "$ref": "#/components/schemas/IssueOrganization"
              },
              "resolution_support": {
                "$ref": "#/components/schemas/ResolutionSupport"
              }
            }
          }
        },
        "required": [
          "respondent_info"
        ]
      },
      "IssueResolution": {
        "description": "Describes the issue resolution for the issue raised by a Complainant",
        "type": "object",
        "properties": {
          "short_desc": {
            "description": "resolution",
            "type": "string"
          },
          "long_desc": {
            "description": "remarks of the resolution of the issue by the respondent",
            "type": "string"
          },
          "gro_remarks": {
            "description": "resolution remarks provided by the gro",
            "type": "string"
          },
          "odr_remarks": {
            "description": "remarks of the result of the dispute, if applicable",
            "type": "string"
          },
          "action_triggered": {
            "type": "string",
            "enum": [
              "REFUND",
              "REPLACEMENT",
              "RETURN",
              "CANCEL",
              "NO-ACTION"
            ]
          },
          "action": {
            "description": "Indicactes the action taken while addressing the issue.\n ### Actions\n  1. resolve : indicating the issue being resolved. \n  2. reject : indicating that the issue is rejected by the respondent or the resolution provider. \n",
            "type": "string",
            "enum": [
              "RESOLVE",
              "REJECT"
            ]
          },
          "refund_amount": {
            "type": "string"
          }
        },
        "required": [
          "short_desc",
          "action_triggered"
        ]
      },
      "IssueOrganization": {
        "type": "object",
        "properties": {
          "org": {
            "$ref": "#/components/schemas/Organization"
          },
          "contact": {
            "$ref": "#/components/schemas/Contact"
          },
          "person": {
            "$ref": "#/components/schemas/Person"
          }
        }
      },
      "ResolutionSupport": {
        "description": "Any one of these resolution support deatils are mandatory to be speficed whenever an issue resolution is proposed.\nIn case of Issue, Either a respondent ChatLink, email or faq deatils should be provided or any of the additional sources of support should be provided\nIn case of Grievance : the GRO details are manadatory to be provided \nIn case of Dispute : the selected ODR details are mandatory to be provided \nPorvides details of the resolution support for the respondent / complainant to interact with the respondent\n",
        "type": "object",
        "properties": {
          "chat_link": {
            "description": "chatbot link for the respondent for complainant to interact with the respondent",
            "type": "string"
          },
          "contact": {
            "$ref": "#/components/schemas/Contact"
          },
          "faqs": {
            "description": "frequently asked questions for the respondent for complainant to get information as required",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Faq"
            }
          },
          "additional_sources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResolutionSource"
            }
          },
          "gros": {
            "description": "Details of the GRO appointed by the resolution provider to support in issue resolution .\nThis is a required object if and when the issue type is \"Grievance\"\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GRO"
            }
          }
        }
      },
      "ResolutionSource": {
        "description": "the resolution source provide details of any addtional resolution resources thier types and a link eg : AI enabled chatbot, support/contact webpage link , lnik to IVR detials etc\n",
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "link": {
            "type": "string"
          }
        }
      },
      "GRO": {
        "description": "Grievance Redressal Officer is appointed by each network participant (buyer app, seller app, logistic provider app) for consumer grievance redressal\nDetails of the GRO appointed by the resolution provider to support in issue resolution .\nThis is a required object if and when the issue type is \"Grievance\"\n",
        "type": "object",
        "properties": {
          "person": {
            "$ref": "#/components/schemas/Person"
          },
          "contact": {
            "$ref": "#/components/schemas/Contact"
          },
          "gro_type": {
            "type": "string",
            "description": "Indicates the system through which the GRO is assigned to this issue. \n### TYPES\n    1. Intefacing NP GRO : indicating the GRO is assigned by the NP where or through which the issue is raised\n    2. Transaction Counterparty NP GRO : indicating the GRO is assigned by the first level of counterparty network provider with which the interfacing NP is interacting with to get an issue resolution.\n    3. Cascaded Counterparty NP GRO : indicating the GRO is assigned by the second or any further downstream levels of counterparty network provider, with which the NP is interacting with, to get an issue resolution.\n",
            "enum": [
              "INTEFACING-NP-GRO",
              "TRANSACTION-COUNTERPARTY-NP-GRO",
              "CASCADED-COUNTERPARTY-NP-GRO"
            ]
          }
        },
        "required": [
          "contact.phone",
          "contact.email",
          "gro_type"
        ]
      },
      "Faq": {
        "description": "type: object\n",
        "properties": {
          "question": {
            "type": "string"
          },
          "answer": {
            "type": "string"
          }
        }
      },
      "ODR": {
        "description": "* Describes the details of the Online Dispute Resolution Provider.\nODR Service Providers (ODR SP) via dispute resolution methods such as mediation/ conciliation and/or arbitration, will attempt to resolve disputes\nNOTE : ```ODR``` stands for Online Dispute Resolution.\n* May also describe the details of the ODR finalized or identified by the intefacing app, to whom the issue will be assigned for resolution.\n",
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the ODR provider",
            "type": "string"
          },
          "short_desc": {
            "description": "Information about the ODR provider",
            "type": "string"
          },
          "long_desc": {
            "description": "Detailed information about the ODR provider",
            "type": "string"
          },
          "url": {
            "description": "URL link to the ODR provider",
            "type": "string"
          },
          "organization": {
            "$ref": "#/components/schemas/IssueOrganization"
          },
          "pricing_model": {
            "description": "Details of the pricing modle of the ODR",
            "type": "object",
            "properties": {
              "price": {
                "$ref": "#/components/schemas/Price"
              },
              "pricing_info": {
                "description": "addtional information about the pricing model",
                "type": "string"
              }
            }
          },
          "resolution_ratings": {
            "$ref": "#/components/schemas/IssueRating"
          }
        },
        "required": [
          "name",
          "short_desc",
          "url",
          "pricing_model",
          "resolution_ratings"
        ]
      },
      "IssueRating": {
        "description": "provides details of the ratings provided for a specific entity.\nDescribes details of how the ODR has been rated across the resolutions it has provided in the past\n",
        "type": "object",
        "properties": {
          "value": {
            "description": "provided rating",
            "type": "string"
          }
        },
        "required": [
          "value"
        ]
      },
      "Issue": {
        "description": "*  Describes the Issue/complaint raised for a particular order, transaction or fulfillment or item for which an issue is faced by the buyer.\n* It also describes the Issue/complaint raised by the network participants to its conuter party or casacaded counterparty apps as and when applicable\n* Describes the issue when it is escalated as a Grievance or a Dispute\n*  supplementary Information  Describes and details evidence of the information about the issue . When the complainant or respondent seeks an issue update the addtional information about the update are populated as part of the supplementary information. \n  the supplementary information section , details information including but not limited to any of the following or more: \n    * comments from the complaintant/ respondent for seeking more information about the issue\n    * comments from the complaintant/ respondent providing the update on the issue with more information on the issue \n    * Picutres providing further information about the issue\n    * documents attachment/links providing further information about the issue etc\n",
        "type": "object",
        "properties": {
          "id": {
            "description": "* Network issue identifier is an unique number assigned to any complaint by the interfacing application at the source.\n\n* **During the life cycle of a complaint, this number will not change and will be communicated to counterparty application.**\n\n* Any subsequent issues created with the interfacing,counterpary or casacaded counter party apps are responsible for providing the correalted and relevant network-issue-id which helps all this inteacting systems to traverse back to the main issue.\n",
            "type": "string"
          },
          "complainant_info": {
            "$ref": "#/components/schemas/Complainant"
          },
          "order_details": {
            "$ref": "#/components/schemas/OrderDetails"
          },
          "description": {
            "$ref": "#/components/schemas/Descriptor"
          },
          "category": {
            "$ref": "#/components/schemas/IssueCategory"
          },
          "sub_category": {
            "$ref": "#/components/schemas/IssueSubCategory"
          },
          "issue_type": {
            "description": "identifies the type of the issue raised\n* the complainant being raised can be a regular ```Issue```, \n* which then subsequently can be escalated to be a ```Grievance``` \n* which may be further escalated to be a ```Dispute```\n",
            "type": "string",
            "enum": [
              "ISSUE",
              "GRIEVANCE",
              "DISPUTE"
            ]
          },
          "source": {
            "$ref": "#/components/schemas/IssueSource"
          },
          "expected_response_time": {
            "$ref": "#/components/schemas/Time"
          },
          "expected_resolution_time": {
            "$ref": "#/components/schemas/Time"
          },
          "status": {
            "description": "### Statues\n  1. Open : indicating that the issue is opened and further action is yet to be taken on the issue\n  2. Closed : indicating that the issue is closed and no further action/update/info/resolution action/status change are expected/accepted on this issue. \n",
            "type": "string",
            "enum": [
              "OPEN",
              "CLOSED"
            ]
          },
          "issue_actions": {
            "$ref": "#/components/schemas/IssueActions"
          },
          "selected_odrs_info": {
            "description": "details of the ODRs selected by the resolution provider .\none of this would be subsequently finalized to be the ODR resposbile to resolve the issue . \nThis is a required object if and when the issue type is \"Dispute\"\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectedODRs"
            }
          },
          "finalized_odr": {
            "$ref": "#/components/schemas/ODR"
          },
          "rating": {
            "description": "rating by the complainant for issue resolution",
            "type": "string",
            "enum": [
              "THUMBS-UP",
              "THUMBS-DOWN"
            ]
          },
          "resolution_provider": {
            "$ref": "#/components/schemas/ResolutionProvider"
          },
          "resolution": {
            "$ref": "#/components/schemas/IssueResolution"
          },
          "additional_info_required": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdditionalInfoRequired"
            }
          },
          "created_at": {
            "description": "timestamp for the creation of the issue",
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "description": "timestamp for the capturing the time an issue was last updated",
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "created_at",
          "updated_at"
        ]
      },
      "SupplementaryInformation": {
        "type": "object",
        "properties": {
          "issue_update_info": {
            "$ref": "#/components/schemas/Descriptor"
          },
          "updated_at": {
            "description": "timestamp for the capturing the time an issue was last updated",
            "type": "string",
            "format": "date-time"
          },
          "message_id": {
            "type": "string"
          }
        }
      },
      "IssueSource": {
        "description": "source of the issue",
        "type": "object",
        "properties": {
          "network_participant_id": {
            "type": "string",
            "description": "unique identifier of the network participant of the source of this issue. It can be one of buyer-id in the buyer- interfacing app , or any of the relevant network provider id based on what causes the issue"
          },
          "type": {
            "description": "Indicates the source from where the issue is raised. \n### TYPES\n    1. Consumer : indicating that the Consumer(Buyer) of a product or a service has raised the issue\n    2. Seller : indicating that the Seller of a product or a service has raised the issue\n    3. Intefacing NP : indicating that the Interfacing NP has identified and raised the issue\n",
            "type": "string",
            "enum": [
              "CONSUMER",
              "SELLER",
              "INTERFACING-NP"
            ]
          }
        }
      },
      "IssueActions": {
        "description": "Status of the issue updated by respondent or the complainant\nThe issue may attain different status based on its lifecycle. TODO add info of enums in here and in issue-source\n",
        "type": "object",
        "properties": {
          "complainant_actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComplainantAction"
            }
          },
          "respondent_actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RespondentAction"
            }
          }
        }
      },
      "IssueCategory": {
        "description": "Identifies what is the category of this issue\n### CATEGORIES:\n1. Order : Indicactes that the issue is related to  Order.\n2. Transaction : Indicactes that the issue is related to  Transaction.\n3. Fulfillment : Indicactes that the issue is related to  Fulfillment.\n4. Product : Indicactes that the issue is related to  Product.\n5. Product Service : Indicactes that the issue is related to  Product Service.\n6. Service : Indicactes that the issue is related to  Service.\n7. Payment : Indicactes that the issue is related to  Payments.\n",
        "type": "string",
        "enum": [
          "ORDER",
          "ITEM",
          "FULFILLMENT",
          "AGENT",
          "PAYMENT",
          "TRANSACTION"
        ]
      },
      "IssueSubCategory": {
        "description": "Identifies what is the sub-category of this issue",
        "type": "string",
        "enum": [
          "ORD01",
          "ORD02",
          "ORD03",
          "ITM01",
          "ITM02",
          "ITM03",
          "ITM04",
          "FLM01",
          "FLM02",
          "FLM03",
          "FLM04",
          "FLM05",
          "FLM06",
          "FLM07",
          "AGT01",
          "AGT02",
          "PMT01",
          "PMT02",
          "PMT03",
          "PMT04"
        ]
      },
      "OrderDetails": {
        "type": "object",
        "properties": {
          "id": {
            "description": "the value of this field will be the combination of context.transaction_id and order.id.",
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IssueItem"
            }
          },
          "fulfillments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IssueFulfillment"
            }
          },
          "provider_id": {
            "type": "string"
          },
          "merchant_order_id": {
            "type": "string"
          }
        }
      },
      "IssueItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "quantity": {
            "type": "number"
          }
        }
      },
      "IssueFulfillment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "state": {
            "type": "string"
          }
        }
      },
      "AdditionalInfoRequired": {
        "type": "object",
        "properties": {
          "info_required": {
            "type": "object",
            "$ref": "#/components/schemas/SupplementaryInformation"
          },
          "info_provided": {
            "type": "object",
            "$ref": "#/components/schemas/SupplementaryInformation"
          }
        }
      },
      "SelectedODRs": {
        "type": "object",
        "properties": {
          "respondent_info": {
            "type": "object",
            "$ref": "#/components/schemas/IssueOrganization"
          },
          "odrs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ODR"
            }
          }
        }
      },
      "ComplainantAction": {
        "type": "object",
        "properties": {
          "complainant_action": {
            "description": "Describes the action taken by the complainant who has raised the issue. \nthe value should be populated when the complainant has taken any of the below actions to anotate the action taken. the actions can be, \n### Actions\n1. Complainant can ```open``` the issue if he isn't satisfied with the products or services he has purchased or used \n2. Complainant can ```escalate``` the issue if he isn't satisfied with the issue resolution\n3. Complainant can ```close``` the issue if he doesn't expect any more additonal action on the issue and he is satisfied with the resolution/actions taken on the issue till the time of closure of the issue.\n",
            "type": "string",
            "enum": [
              "OPEN",
              "ESCALATE",
              "CLOSE"
            ]
          },
          "updated_at": {
            "description": "timestamp for the capturing the time an issue status was last updated",
            "type": "string",
            "format": "date-time"
          },
          "updated_by": {
            "$ref": "#/components/schemas/IssueOrganization"
          },
          "short_desc": {
            "description": "details of the remarks when the issue status is changed, can be captured when the complainant triggers an action",
            "type": "string"
          }
        }
      },
      "RespondentAction": {
        "type": "object",
        "properties": {
          "respondent_action": {
            "type": "string",
            "enum": [
              "PROCESSING",
              "CASCADED",
              "RESOLVED",
              "NEED-MORE-INFO"
            ]
          },
          "updated_at": {
            "description": "timestamp for the capturing the time an issue status was last updated",
            "type": "string",
            "format": "date-time"
          },
          "updated_by": {
            "$ref": "#/components/schemas/IssueOrganization"
          },
          "short_desc": {
            "description": "details of the remarks when the issue status is changed, can be captured when the respondent triggers an action",
            "type": "string"
          },
          "cascaded_level": {
            "description": "the default value will be 1, whenever the issue will be cascaded to the next level the value of this field should be incremented by 1 it will upgrade it indicates to the next sub-level.",
            "type": "integer"
          }
        }
      }
    }
  }
}